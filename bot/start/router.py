import re

from aiogram import types, Router
from aiogram.filters import CommandStart
from aiogram.types import CallbackQuery, Message

from bot.filters import StartWithQuery
from bot.filters import TextCommand
from bot.gpt.command_types import change_model_text, change_system_message_text, balance_text, clear_text, \
    get_history_text, help_text, help_command, app_command
from bot.gpt.utils import check_subscription
from bot.images import images_command_text
from bot.payment.command_types import balance_payment_command_text
from bot.referral import referral_command_text
from bot.suno.command_types import suno_text
from services import tokenizeService, referralsService

startRouter = Router()

hello_text = """
üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –æ—Ç deep.foundation!

–ë–æ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π, –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Ç–µ–±–µ –±—É–¥–µ—Ç –Ω–∞—á–∏—Å–ª—è—Ç—å—Å—è –±–∞–∑–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –æ—Ç *10,000*‚ö°Ô∏è (—ç–Ω–µ—Ä–≥–∏—è)!

/referral - –£–≤–µ–ª–∏—á–∏–≤–∞–π —Å–≤–æ–∏ –Ω–∞–≥—Ä–∞–¥—ã —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π!
15 000‚ö°Ô∏èÔ∏è –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. 
+500‚ö°Ô∏èÔ∏è –∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é –±–∞–ª–∞–Ω—Å–∞ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. 

–ü—Ä–∏–≤–æ–¥–∏ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π –µ—â–µ –±–æ–ª—å—à–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö ‚ö°Ô∏è!

ü§ñ –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å –ª—é–±–æ–π –∑–∞–¥–∞—á–µ–π, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ! 

–¢–∞–∫ –∂–µ, —É –Ω–∞—Å –µ—Å—Ç—å –æ—á–µ–Ω—å —É–¥–æ–±–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –ø—Ä—è–º–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º!
https://t.me/DeepGPTBot/DeepGPT

/help - –û–±–∑–æ—Ä –≤—Å–µ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞.
/balance - ‚ú® –£–∑–Ω–∞—Ç—å —Å–≤–æ–π –±–∞–ª–∞–Ω—Å
/referral - üîó –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∏
"""

ref_text = """
üëã –¢—ã –ø—Ä–∏–±—ã–ª –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É —Ç—ã –¥–æ–ª–∂–µ–Ω –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª. üëäüèª
"""


async def handle_referral(message, user_id, ref_user_id):
    result = await referralsService.create_referral(user_id, ref_user_id)

    if result["parent"] is not None:
        await message.answer(text="""
üéâ –í—ã –ø–æ–ª—É—á–∏–ª–∏ *5 000*‚ö°Ô∏è!

/balance - ‚ú® –£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å
/referral - üîó –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∏
""")

        await message.bot.send_message(chat_id=ref_user_id, text="""
üéâ –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! 
–í—ã –ø–æ–ª—É—á–∏–ª–∏ *5 000*‚ö°Ô∏è!
–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª –¥–æ–ª–∂–µ–Ω –ø—Ä–æ—è–≤–∏—Ç—å –ª—é–±—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –±–æ—Ç–µ —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞, —á—Ç–æ–±—ã –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –µ—â–µ *5 000*‚ö°Ô∏è –∏ +500‚ö°Ô∏èÔ∏è –∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é –±–∞–ª–∞–Ω—Å–∞.

/balance - ‚ú® –£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å
/referral - üîó –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∏
""")


async def create_token_if_not_exist(user_id):
    return await tokenizeService.get_tokens(user_id)



@startRouter.message(CommandStart())
async def buy(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(
        resize_keyboard=True,
        keyboard=[
            [
                types.KeyboardButton(text=balance_text()),
                types.KeyboardButton(text=balance_payment_command_text())
            ],
            [
                types.KeyboardButton(text=change_model_text()),
                types.KeyboardButton(text=change_system_message_text())
            ],
            [
                types.KeyboardButton(text=suno_text()),
                types.KeyboardButton(text=images_command_text())
            ],
            [
                types.KeyboardButton(text=clear_text()),
                types.KeyboardButton(text=get_history_text())
            ],
            [
                types.KeyboardButton(text=referral_command_text()),
            ],
        ],
        input_field_placeholder="üí¨ –ó–∞–¥–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å"
    )
    args_match = re.search(r'^/start\s(\S+)', message.text)
    ref_user_id = args_match.group(1) if args_match else None

    await message.answer(text=hello_text, reply_markup=keyboard)

    is_subscribe = await check_subscription(message)

    await create_token_if_not_exist(message.from_user.id)

    if not is_subscribe:
        if str(ref_user_id) == str(message.from_user.id):
            return

        await message.answer(
            text=ref_text,
            reply_markup=types.InlineKeyboardMarkup(
                resize_keyboard=True,
                inline_keyboard=[
                    [
                        types.InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è üëäüèª", url="https://t.me/gptDeep"),
                    ],
                    [
                        types.InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å ‚úÖ",
                                                   callback_data=f"ref-is-subscribe {ref_user_id} {message.from_user.id}"),
                    ]
                ]
            )
        )

        return

    await handle_referral(message, message.from_user.id, ref_user_id)


@startRouter.callback_query(StartWithQuery("ref-is-subscribe"))
async def handle_ref_is_subscribe_query(callback_query: CallbackQuery):
    ref_user_id = callback_query.data.split(" ")[1]
    user_id = callback_query.data.split(" ")[2]

    is_subscribe = await check_subscription(callback_query.message, user_id)

    if not is_subscribe:
        await callback_query.message.answer(text="–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å! üò°")
        return

    await handle_referral(callback_query.message, user_id, ref_user_id)


@startRouter.message(TextCommand([help_command(), help_text()]))
async def help_command(message: types.Message):
    await message.answer(text="""
–û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ—Å—É—Äc –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ - ‚ö°Ô∏è (—ç–Ω–µ—Ä–≥–∏—è).
–≠—Ç–æ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ä–µ—Å—É—Ä—Å –¥–ª—è –≤—Å–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏.

–ö–∞–∂–¥—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ç—Ä–∞—Ç–∏—Ç —Ä–∞–∑–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ‚ö°Ô∏è.
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö ‚ö°Ô∏è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –¥–ª–∏–Ω—ã –¥–∏–∞–ª–æ–≥–∞, –æ—Ç–≤–µ—Ç–æ–≤ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –∏ –≤–∞—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.
–î–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É - /clear, —á—Ç–æ–±—ã –Ω–µ –∑–∞—Å–æ—Ä—è—Ç—å –¥–∏–∞–ª–æ–≥!

/app - üî• –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é!
/start - üîÑ –†–µ—Å—Ç–∞—Ä—Ç –±–æ—Ç–∞, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç, –ø–æ–º–æ–≥–∞–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏.
/model - ü§ñ –°–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç, –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å –±–æ—Ç–∞.
/system - ‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–º–µ–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º.   
/clear - üßπ –û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç, –ø–æ–º–æ–≥–∞–µ—Ç –∑–∞–±—ã—Ç—å –±–æ—Ç—É –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é.  
/balance - ‚ú® –ë–∞–ª–∞–Ω—Å, –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å ‚ö°Ô∏è.
/image - üñºÔ∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É, –≤—ã–∑—ã–≤–∞–µ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç—å Stable Diffusion –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
/buy - üíé –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å, –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å ‚ö°Ô∏è.
/referral - üîó –ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
/suno - üéµ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Å–µ–Ω —á–µ—Ä–µ–∑ suno
/text - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
""")


@startRouter.message(TextCommand([app_command()]))
async def app_handler(message: Message):
    await message.answer("""–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: https://t.me/DeepGPTBot/DeepGPT""")
